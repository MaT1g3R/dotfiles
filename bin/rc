#!/bin/env python3

"""
MIT License

Copyright (c) 2017 MaT1g3R

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
"""

import os
from shutil import copy


class Main:
    """The main run class"""

    def __init__(self):
        self.dest = ''
        self.ext = None
        self.files = []

    def get_src(self):
        """Get all files from source folder"""
        while True:
            src = input("Please enter source folder path")
            if os.path.isdir(src):
                self.files = [os.path.join(dp, f) for dp, dn, filenames in
                              os.walk(src)
                              for f in filenames if
                              os.path.isfile(os.path.join(dp, f))]
                return
            else:
                print('Please enter a valid path')

    def get_dest(self):
        """Get the destination folder"""
        while True:
            dest = input('Please enter the destination folder')
            if os.path.isdir(dest):
                self.dest = dest
                return
            else:
                print('Please enter a valid path')

    def get_ext(self):
        """Get allowed file extensions"""
        ext = input('Please enter your desired file extensions to be copied, '
                    'with the dot, separated by comma (,) '
                    'leave blank for all files')

        ext = ext.strip()
        if ext:
            self.ext = tuple(ext.split(','))

    def copy(self):
        """Copy the files"""
        success = True
        not_copied = []
        if self.ext is not None and self.ext != ():
            self.files = [f for f in self.files if f.endswith(self.ext)]
        for i in range(len(self.files)):
            print(
                'copying {}/{}'.format(i + 1, len(self.files)),
                end="\r", flush=True
            )
            try:
                copy(self.files[i], self.dest)
            except Exception as e:
                print(
                    ('{} was not copied due to an exception:\n'
                     '{}').format(self.files[i], e)
                )
                success = False
                not_copied.append(self.files[i])
        msg = (
            'Success!' if success
            else 'Those files were not copied due to an exception:\n{}'.format(
                '\n'.join(not_copied))
        )
        print(msg)

    def run(self):
        """The main run method"""
        while True:
            self.get_src()
            self.get_dest()
            self.get_ext()
            self.copy()
            while True:
                quit_prompt = input('Quit? (y/n)')
                if quit_prompt == 'y':
                    return
                elif quit_prompt == 'n':
                    break
                else:
                    print("Please enter 'y' for yes or 'n' for no")


if __name__ == '__main__':
    try:
        Main().run()
    except KeyboardInterrupt:
        exit()
